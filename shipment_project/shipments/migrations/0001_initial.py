# Generated by Django 4.2.7 on 2025-04-27 11:41

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lr_no', models.CharField(max_length=20, unique=True)),
                ('booking_date', models.DateField(auto_now_add=True)),
                ('from_location', models.CharField(max_length=100)),
                ('to_location', models.CharField(max_length=100)),
                ('branch_from_phone', models.CharField(max_length=15)),
                ('branch_to_phone', models.CharField(max_length=15)),
                ('actual_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('chargeable_weight', models.DecimalField(blank=True, decimal_places=2, max_digits=6, null=True)),
                ('freight', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('dod', models.DateField(auto_now_add=True)),
                ('sgst', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cgst', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('policy_no', models.CharField(blank=True, max_length=50, null=True)),
                ('noofpkgs', models.CharField(blank=True, max_length=50, null=True)),
                ('consignor', models.CharField(blank=True, max_length=50, null=True)),
                ('consignee', models.CharField(blank=True, max_length=50, null=True)),
                ('saidtocontain', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Shipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lr_no', models.CharField(max_length=20, unique=True)),
                ('tracking_number', models.CharField(max_length=50, unique=True)),
                ('from_location', models.CharField(max_length=100)),
                ('to_location', models.CharField(max_length=100)),
                ('dod', models.DateField(blank=True, null=True)),
                ('branch_from_phone', models.CharField(max_length=15)),
                ('branch_to_phone', models.CharField(max_length=15)),
                ('customer_name', models.CharField(max_length=100)),
                ('status', models.CharField(default='Pending', max_length=50)),
                ('origin', models.CharField(max_length=100)),
                ('destination', models.CharField(max_length=100)),
                ('priority', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ShipmentDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('from_location', models.CharField(max_length=100)),
                ('branch_ph_no', models.CharField(max_length=15)),
                ('to_location', models.CharField(max_length=100)),
                ('no_of_packages_in_words', models.CharField(max_length=255)),
                ('actual_wt_kg', models.FloatField()),
                ('charge_wt_kg', models.FloatField()),
                ('pm_no', models.CharField(max_length=100)),
                ('gstin', models.CharField(max_length=50)),
                ('tel', models.CharField(max_length=15)),
                ('pin', models.CharField(max_length=6)),
                ('consignor', models.CharField(max_length=100)),
                ('consignee', models.CharField(max_length=100)),
                ('remark', models.TextField()),
                ('freight', models.FloatField()),
                ('dod', models.DateField(blank=True, null=True)),
                ('misc_charges', models.FloatField()),
                ('sub_total', models.FloatField()),
                ('sgst', models.FloatField()),
                ('cgst', models.FloatField()),
                ('g_total', models.FloatField()),
                ('to_pay', models.FloatField()),
                ('paid', models.FloatField()),
                ('tbb', models.CharField(max_length=10)),
                ('to_be_delivered_before_date', models.DateField(blank=True, null=True)),
                ('le_no', models.CharField(max_length=100)),
                ('pkg_date', models.DateField(blank=True, null=True)),
                ('owners_risk', models.BooleanField(default=False)),
                ('e_way_bill_status', models.CharField(max_length=100)),
                ('insurance', models.CharField(max_length=100)),
                ('policy_no', models.CharField(max_length=100)),
                ('shipment', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='shipment_details', to='shipments.shipment')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('agent', 'Agent'), ('client', 'Client')], default='agent', max_length=50)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
